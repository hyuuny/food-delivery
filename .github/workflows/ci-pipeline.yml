name: ci-pipeline

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: ‚öôÔ∏è Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: üèóÔ∏è Build with Gradle
        run: |
          ./gradlew assemble --no-daemon --build-cache
          ./gradlew --stop

      - name: ‚≠ê Set IMAGE_TAG
        id: set_image_tag
        run: |
          IMAGE_TAG=${GITHUB_SHA::7}
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          echo "IMAGE_TAG=$IMAGE_TAG"

      - name: üìã Verify IMAGE_TAG
        run: echo "IMAGE_TAG is ${{ env.IMAGE_TAG }}"

      - name: üê≥ Build Docker image
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          IMAGE_TAG: ${{ env.IMAGE_TAG }}

        run: |
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
          docker build -t food-delivery .
          IMAGE_TAG=${{ env.IMAGE_TAG }}
          echo "Tagging image with hyuuny/food-delivery:${IMAGE_TAG}"
          docker tag food-delivery:latest hyuuny/food-delivery:${IMAGE_TAG}
          echo "Pushing image to Docker Hub"
          docker push hyuuny/food-delivery:${IMAGE_TAG}

      - name: üß™ Run Tests
        run: |
          ./gradlew test --no-daemon
          ./gradlew --stop

      - name: ‚úîÔ∏è Check Test Results
        run: |
          TEST_EXIT_CODE=$?
          if [ $TEST_EXIT_CODE -ne 0 ]; then
            echo "Tests failed. Exiting with code $TEST_EXIT_CODE"
            exit $TEST_EXIT_CODE
          fi

      - name: üì¶ Archive Build Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build-artifacts
          path: build/libs/*.jar